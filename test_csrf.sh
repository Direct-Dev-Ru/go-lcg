#!/bin/bash

# üõ°Ô∏è CSRF Protection Test Script
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç CSRF –∑–∞—â–∏—Ç—É LCG –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

echo "üõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CSRF –∑–∞—â–∏—Ç—ã LCG"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
print_result() {
    local test_name="$1"
    local status="$2"
    local message="$3"
    
    if [ "$status" = "PASS" ]; then
        echo -e "${GREEN}‚úÖ $test_name: PASS${NC} - $message"
    elif [ "$status" = "FAIL" ]; then
        echo -e "${RED}‚ùå $test_name: FAIL${NC} - $message"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  $test_name: $status${NC} - $message"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
if ! curl -s http://localhost:8080/login > /dev/null 2>&1; then
    echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:8080${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: LCG_SERVER_REQUIRE_AUTH=true ./lcg serve -p 8080"
    exit 1
fi

echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"

# –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 1: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞${NC}"
response=$(curl -s -w "%{http_code}" -X POST http://localhost:8080/api/execute \
    -H "Content-Type: application/json" \
    -d '{"prompt":"whoami","system_id":"1"}' \
    -o /dev/null)

if [ "$response" = "403" ]; then
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/execute" "PASS" "–ó–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (403 Forbidden)"
else
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/execute" "FAIL" "–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª (HTTP $response)"
fi

# –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞${NC}"
response=$(curl -s -w "%{http_code}" -X POST http://localhost:8080/api/save-result \
    -H "Content-Type: application/json" \
    -d '{"result":"test result","command":"test command"}' \
    -o /dev/null)

if [ "$response" = "403" ]; then
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/save-result" "PASS" "–ó–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (403 Forbidden)"
else
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/save-result" "FAIL" "–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª (HTTP $response)"
fi

# –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞${NC}"
response=$(curl -s -w "%{http_code}" -X POST http://localhost:8080/api/add-to-history \
    -H "Content-Type: application/json" \
    -d '{"prompt":"test prompt","result":"test result"}' \
    -o /dev/null)

if [ "$response" = "403" ]; then
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/add-to-history" "PASS" "–ó–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (403 Forbidden)"
else
    print_result "CSRF –∑–∞—â–∏—Ç–∞ /api/add-to-history" "FAIL" "–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª (HTTP $response)"
fi

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å)
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 4: GET –∑–∞–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å)${NC}"
response=$(curl -s -w "%{http_code}" http://localhost:8080/login -o /dev/null)

if [ "$response" = "200" ]; then
    print_result "GET –∑–∞–ø—Ä–æ—Å—ã" "PASS" "GET –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç (HTTP $response)"
else
    print_result "GET –∑–∞–ø—Ä–æ—Å—ã" "FAIL" "GET –∑–∞–ø—Ä–æ—Å—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç (HTTP $response)"
fi

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è CSRF —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 5: –ù–∞–ª–∏—á–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞${NC}"
csrf_token=$(curl -s http://localhost:8080/login | grep -o 'name="csrf_token"[^>]*value="[^"]*"' | sed 's/.*value="\([^"]*\)".*/\1/')

if [ -n "$csrf_token" ]; then
    print_result "CSRF —Ç–æ–∫–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞" "PASS" "–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: ${csrf_token:0:20}..."
else
    print_result "CSRF —Ç–æ–∫–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞" "FAIL" "–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –¢–µ—Å—Ç 6: –ü–æ–ø—ã—Ç–∫–∞ –∞—Ç–∞–∫–∏ —Å –ø–æ–¥–¥–µ–ª—å–Ω—ã–º CSRF —Ç–æ–∫–µ–Ω–æ–º
echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç 6: –ê—Ç–∞–∫–∞ —Å –ø–æ–¥–¥–µ–ª—å–Ω—ã–º CSRF —Ç–æ–∫–µ–Ω–æ–º${NC}"
response=$(curl -s -w "%{http_code}" -X POST http://localhost:8080/api/execute \
    -H "Content-Type: application/json" \
    -H "X-CSRF-Token: fake_token" \
    -d '{"prompt":"whoami","system_id":"1"}' \
    -o /dev/null)

if [ "$response" = "403" ]; then
    print_result "CSRF –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–¥–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞" "PASS" "–ü–æ–¥–¥–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (403 Forbidden)"
else
    print_result "CSRF –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–¥–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞" "FAIL" "–ü–æ–¥–¥–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç (HTTP $response)"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\n${BLUE}üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:${NC}"
echo "=================================="

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
total_tests=6
passed_tests=0

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ç–µ—Å—Ç
if curl -s -w "%{http_code}" -X POST http://localhost:8080/api/execute -H "Content-Type: application/json" -d '{"prompt":"test"}' -o /dev/null | grep -q "403"; then
    ((passed_tests++))
fi

if curl -s -w "%{http_code}" -X POST http://localhost:8080/api/save-result -H "Content-Type: application/json" -d '{"result":"test"}' -o /dev/null | grep -q "403"; then
    ((passed_tests++))
fi

if curl -s -w "%{http_code}" -X POST http://localhost:8080/api/add-to-history -H "Content-Type: application/json" -d '{"prompt":"test"}' -o /dev/null | grep -q "403"; then
    ((passed_tests++))
fi

if curl -s -w "%{http_code}" http://localhost:8080/login -o /dev/null | grep -q "200"; then
    ((passed_tests++))
fi

if curl -s http://localhost:8080/login | grep -q 'name="csrf_token"'; then
    ((passed_tests++))
fi

if curl -s -w "%{http_code}" -X POST http://localhost:8080/api/execute -H "Content-Type: application/json" -H "X-CSRF-Token: fake" -d '{"prompt":"test"}' -o /dev/null | grep -q "403"; then
    ((passed_tests++))
fi

echo -e "–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${GREEN}$passed_tests${NC} –∏–∑ ${BLUE}$total_tests${NC}"

if [ $passed_tests -eq $total_tests ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! CSRF –∑–∞—â–∏—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${NC}"
    exit 0
elif [ $passed_tests -ge 4 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å CSRF –∑–∞—â–∏—Ç–æ–π.${NC}"
    exit 1
else
    echo -e "${RED}‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å CSRF –∑–∞—â–∏—Ç–æ–π!${NC}"
    exit 2
fi
